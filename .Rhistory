names(df2)
df2
df2$`Multiplex ID`
df2$`Multiplex ID` <- row.names(df2)
full_join(df1,df2)
full_join(df1,df2,"Multiplex ID")
pacuta
pacuta.sam
porites.sam
full_join(df1,df2,"Species")
class(df2$Species)
class(df1$Species)
# Combine data with
# Packages
library(phyloseq)
library(tidyverse)
# Load data ####
porites <- readRDS("./output/phyloseq_object_16S_cleaned.RDS")
pacuta <- readRDS("./output/Pacuta_phyloseq_object.Rds")
pacuta.otu <- otu_table(pacuta)
pacuta.tax <- tax_table(pacuta)
pacuta.sam <- sample_data(pacuta)
porites.otu <- otu_table(porites)
porites.tax <- tax_table(porites)
porites.sam <- sample_data(porites)
# Combine data with
# Packages
library(phyloseq)
library(tidyverse)
# Load data ####
porites <- readRDS("./output/phyloseq_object_16S_cleaned.RDS")
pacuta <- readRDS("./output/Pacuta_phyloseq_object.Rds")
pacuta.otu <- otu_table(pacuta)
pacuta.tax <- tax_table(pacuta)
pacuta.sam <- sample_data(pacuta)
porites.otu <- otu_table(porites)
porites.tax <- tax_table(porites)
porites.sam <- sample_data(porites)
left_join(df1,df2)
left_join(porites.sam,pacuta.sam)
pacuta.sam <- as(sample_data(pacuta), "data.frame")
porites.otu <- otu_table(porites)
porites.tax <- tax_table(porites)
porites.sam <- as(sample_data(porites),"data.frame")
left_join(porites.sam,pacuta.sam)
full_join(porites.sam,pacuta.sam)
sam = full_join(porites.sam,pacuta.sam)
View(sam)
# Combine data with
# Packages
library(phyloseq)
library(tidyverse)
# Load data ####
pluteus <- readRDS("./output/phyloseq_object_16S_cleaned.RDS")
pacuta <- readRDS("./output/Pacuta_phyloseq_object.Rds")
pacuta.otu <- otu_table(pacuta)
pacuta.tax <- tax_table(pacuta)
pacuta.sam <- as(sample_data(pacuta), "data.frame")
pluteus.otu <- otu_table(porites)
pluteus.tax <- tax_table(porites)
pluteus.sam <- as(sample_data(porites),"data.frame")
pluteus.sam
pacuta.sam
pacuta.sam$Location <- pacuta.sam$Island.Collected.From
sam = full_join(porites.sam,pacuta.sam)
sam
ps = merge_phyloseq(porites,pacuta.otu,pacuta.tax,pacuta.sam)
ps
transform_sample_counts(ps, function(x) x/sum(x))
pluteus
pacuta
pacuta.sam$SampleName
pacuta.sam$Library.ID <-  pacuta.sam$SampleName
pacuta%>%select(c(SampleID,Library.ID,Species,Location))
pacuta.sam%>%select(c(SampleID,Library.ID,Species,Location))
pacuta.sam <- pacuta.sam %>% select(c(SampleID,Library.ID,Species,Location))
pluteus.sam <- pluteus.sam %>% select(c(SampleID,Library.ID,Species,Location))
# Combine data with
# Packages
library(phyloseq)
library(tidyverse)
# Load data ####
pluteus <- readRDS("./output/phyloseq_object_16S_cleaned.RDS")
pacuta <- readRDS("./output/Pacuta_phyloseq_object.Rds")
# Parse components for merging
pacuta.otu <- otu_table(pacuta)
pacuta.tax <- tax_table(pacuta)
pacuta.sam <- as(sample_data(pacuta), "data.frame")
pluteus.otu <- otu_table(porites)
pluteus.tax <- tax_table(porites)
pluteus.sam <- as(sample_data(porites),"data.frame")
# Add shared Location column
pacuta.sam$Location <- pacuta.sam$Island.Collected.From
pacuta.sam$Library.ID <-  pacuta.sam$SampleName
pacuta.sam <- pacuta.sam %>% select(c(SampleID,Library.ID,Species,Location))
pluteus.sam <- pluteus.sam %>% select(c(SampleID,Library.ID,Species,Location))
sam = full_join(pluteus.sam,pacuta.sam)
ps = merge_phyloseq(pluteus.otu,pacuta.otu,pluteus.tax,pacuta.tax,pluteus.sam,pacuta.sam)
ps
ps = merge_phyloseq(pluteus.otu,pacuta.otu,pluteus.tax,pacuta.tax,sam)
ps
ps = merge_phyloseq(pluteus.otu,pacuta.otu,pluteus.tax,pacuta.tax,sample_data(sam))
sample_names(pacuta)
sample_names(pluteus)
sam
pacuta@sam_data$Location <- pacuta@sam_data$Island.Collected.From
pacuta@sam_data$Library.ID <-  pacuta@sam_data$SampleName
ps <- merge_phyloseq(pluteus,pacuta)
# Combine data with
# Packages
library(phyloseq)
library(tidyverse)
# Load data ####
pluteus <- readRDS("./output/phyloseq_object_16S_cleaned.RDS")
pacuta <- readRDS("./output/Pacuta_phyloseq_object.Rds")
# fix column names
pacuta@sam_data$Location <- pacuta@sam_data$Island.Collected.From
pacuta@sam_data$Library.ID <-  pacuta@sam_data$SampleName
# Parse components for merging
pacuta.otu <- otu_table(pacuta)
pacuta.tax <- tax_table(pacuta)
pacuta.sam <- as(sample_data(pacuta), "data.frame")
pluteus.otu <- otu_table(porites)
pluteus.tax <- tax_table(porites)
pluteus.sam <- as(sample_data(porites),"data.frame")
# Combine data with
# Packages
library(phyloseq)
library(tidyverse)
# Load data ####
pluteus <- readRDS("./output/phyloseq_object_16S_cleaned.RDS")
pacuta <- readRDS("./output/Pacuta_phyloseq_object.Rds")
# fix column names
pacuta@sam_data$Location <- pacuta@sam_data$Island.Collected.From
pacuta@sam_data$Library.ID <-  pacuta@sam_data$SampleName
# Parse components for merging
pacuta.otu <- otu_table(pacuta)
pacuta.tax <- tax_table(pacuta)
pacuta.sam <- sample_data(pacuta)
pluteus.otu <- otu_table(pluteus)
pluteus.tax <- tax_table(pluteus)
pluteus.sam <- sample_data(pluteus)
ps <- merge_phyloseq(pacuta.otu,pacuta.tax,pacuta.sam,pluteus.otu,pluteus.tax,pluteus.sam)
pacuta.sam <- as(sample_data(pacuta), "data.frame")
pluteus.otu <- otu_table(pluteus)
pluteus.tax <- tax_table(pluteus)
pluteus.sam <- as(sample_data(pluteus),"data.frame")
ps <- merge_phyloseq(pluteus.otu,pluteus.sam,pluteus.tax,pacuta.otu,pacuta.sam,pacuta.tax)
ps
ps <- merge_phyloseq(pluteus.otu,pluteus.sam,pluteus.tax,pacuta.otu,sample_data(pacuta.sam),pacuta.tax)
ps
ps <- merge_phyloseq(pluteus.otu,sample_data(pluteus.sam),pluteus.tax,pacuta.otu,sample_data(pacuta.sam),pacuta.tax)
ps
sample_data(ps)
ggplot(mapping=aes(x=1:ncol(otu_table(ps)),y=rowSums(otu_table(ps)))) + geom_point(aes(color=sample_data(ps)$Species))
ggplot(mapping=aes(x=1:ncol(otu_table(ps)),y=rowSums(otu_table(ps)))) + geom_point()
plot(rowSums(otu_table(ps)))
ggplot(mapping=aes(x=1:nrow(otu_table(ps)),y=rowSums(otu_table(ps)))) + geom_point()
ggplot(mapping=aes(x=1:nrow(otu_table(ps)),y=rowSums(otu_table(ps)))) + geom_point(aes(color=ps@sam_data$Species))
ps@sam_data$Species
pacuta@sam_data$Location
# Combine data with
# Packages
library(phyloseq)
library(tidyverse)
# Load data ####
pluteus <- readRDS("./output/phyloseq_object_16S_cleaned.RDS")
pacuta <- readRDS("./output/Pacuta_phyloseq_object.Rds")
# fix column names
pacuta@sam_data$Location <- as.character(pacuta@sam_data$Island.Collected.From)
pacuta@sam_data$Library.ID <-  as.character(pacuta@sam_data$SampleName)
# Parse components for merging
pacuta.otu <- otu_table(pacuta)
pacuta.tax <- tax_table(pacuta)
pacuta.sam <- as(sample_data(pacuta), "data.frame")
pluteus.otu <- otu_table(pluteus)
pluteus.tax <- tax_table(pluteus)
pluteus.sam <- as(sample_data(pluteus),"data.frame")
# Merge phyloseq objects ####
ps <- merge_phyloseq(pluteus.otu,sample_data(pluteus.sam),pluteus.tax,pacuta.otu,sample_data(pacuta.sam),pacuta.tax)
ggplot(mapping=aes(x=1:nrow(otu_table(ps)),y=rowSums(otu_table(ps)))) + geom_point(aes(color=ps@sam_data$Species))
ps@sam_data$Species
ps@sam_data$Location
ps@sam_data$Species
ps@sam_data$Species[ps@sam_data$Species=="1"]
ps@sam_data$Species[ps@sam_data$Species=="1"] <- "P acuta"
ggplot(mapping=aes(x=1:nrow(otu_table(ps)),y=rowSums(otu_table(ps)))) + geom_point(aes(color=ps@sam_data$Species))
ggplot(mapping=aes(x=1:nrow(otu_table(ps)),y=rowSums(otu_table(ps)))) + geom_point(aes(color=ps@sam_data$Species)) + labs(x="Sample number",y="Read count")
ggplot(mapping=aes(x=1:nrow(otu_table(ps)),y=rowSums(otu_table(ps)))) + geom_point(aes(color=ps@sam_data$Species)) + labs(x="Sample number",y="Read count",color="Species")
ggplot(mapping=aes(x=1:nrow(otu_table(ps)),y=rowSums(otu_table(ps)))) + geom_point(aes(color=ps@sam_data$Species)) +
labs(x="Sample number",y="Read count",color="Species") + theme_bw()
sam_data(ps)$ReadDepth <- rowSums(otu_table(ps))
sample_data(ps)$ReadDepth <- rowSums(otu_table(ps))
# Combine data with
# Packages
library(phyloseq)
library(tidyverse)
# Load data ####
pluteus <- readRDS("./output/phyloseq_object_16S_cleaned.RDS")
pacuta <- readRDS("./output/Pacuta_phyloseq_object.Rds")
# fix column names
pacuta@sam_data$Location <- as.character(pacuta@sam_data$Island.Collected.From)
pacuta@sam_data$Library.ID <-  as.character(pacuta@sam_data$SampleName)
# Parse components for merging
pacuta.otu <- otu_table(pacuta)
pacuta.tax <- tax_table(pacuta)
pacuta.sam <- as(sample_data(pacuta), "data.frame")
pluteus.otu <- otu_table(pluteus)
pluteus.tax <- tax_table(pluteus)
pluteus.sam <- as(sample_data(pluteus),"data.frame")
# Merge phyloseq objects ####
ps <- merge_phyloseq(pluteus.otu,sample_data(pluteus.sam),pluteus.tax,pacuta.otu,sample_data(pacuta.sam),pacuta.tax)
# Fix metadata
ps@sam_data$Species[ps@sam_data$Species=="1"] <- "P acuta"
ggplot(mapping=aes(x=1:nrow(otu_table(ps)),y=rowSums(otu_table(ps)))) + geom_point(aes(color=ps@sam_data$Species)) +
labs(x="Sample number",y="Read count",color="Species") + theme_bw()
# Add read count to sampledata
sample_data(ps)$ReadDepth <- rowSums(otu_table(ps))
ps <- transform_sample_counts(ps, function(x) x/sum(x))
nmds = ordinate(ps,method = "nmds")
nmds
nmds = ordinate(ps,method = "NMDS")
plot_ordination(ps,nmds,color="Species")
mod1 <- adonis(otu_table(ps) ~ sample_data(ps)$Species + sample_data(ps)$ReadDepth)
library(vegan)
mod1 <- adonis(otu_table(ps) ~ sample_data(ps)$Species + sample_data(ps)$ReadDepth)
summary(mod1)
mod1
# Combine data with
# Packages
library(phyloseq)
library(tidyverse)
library(vegan)
# Load data ####
pluteus <- readRDS("./output/phyloseq_object_16S_cleaned.RDS")
pacuta <- readRDS("./output/Pacuta_phyloseq_object.Rds")
# fix column names
pacuta@sam_data$Location <- as.character(pacuta@sam_data$Island.Collected.From)
pacuta@sam_data$Library.ID <-  as.character(pacuta@sam_data$SampleName)
# Parse components for merging
pacuta.otu <- otu_table(pacuta)
pacuta.tax <- tax_table(pacuta)
pacuta.sam <- as(sample_data(pacuta), "data.frame")
pluteus.otu <- otu_table(pluteus)
pluteus.tax <- tax_table(pluteus)
pluteus.sam <- as(sample_data(pluteus),"data.frame")
# Merge phyloseq objects ####
ps <- merge_phyloseq(pluteus.otu,sample_data(pluteus.sam),pluteus.tax,pacuta.otu,sample_data(pacuta.sam),pacuta.tax)
# Fix metadata
ps@sam_data$Species[ps@sam_data$Species=="1"] <- "P acuta"
ggplot(mapping=aes(x=1:nrow(otu_table(ps)),y=rowSums(otu_table(ps)))) + geom_point(aes(color=ps@sam_data$Species)) +
labs(x="Sample number",y="Read count",color="Species") + theme_bw()
# Add read count to sampledata
sample_data(ps)$ReadDepth <- rowSums(otu_table(ps))
# Convert to relative abundance ####
ps_ra <- transform_sample_counts(ps, function(x) x/sum(x))
# Ordination
nmds = ordinate(ps,method = "NMDS")
# Plot ordination
plot_ordination(ps,nmds,color="Species")
# PermANOVA
mod1 <- adonis(otu_table(ps) ~ sample_data(ps)$Species + sample_data(ps)$ReadDepth)
mod1
ps_pa <- transform_sample_counts(ps, function(x) x>0)
ps_pa <- transform_sample_counts(ps, function(abund) 1*(abund>0))
?ordinate
nmds = ordinate(ps,method = "NMDS")
plot_ordination(ps,nmds,color="Species")
comm.dist <- vegdist(otu_table(ps),method = "jaccard",binary = TRUE)
comm.dist <- vegdist(t(otu_table(ps)),method = "jaccard",binary = TRUE)
comm.dist <- vegdist((otu_table(ps_pa)),method = "jaccard",binary = TRUE)
dist(otu_table(ps_pa))
comm.dist <- dist((otu_table(ps_pa)),method = "jaccard",binary = TRUE)
vegdist(otu_table(ps_pa))
vegdist(otu_table(ps_pa),method = "jaccard")
comm.dist <- vegdist(otu_table(ps_pa),method = "jaccard")
?metaMDS
mds <- metaMDS(otu_table(ps_pa),distance = "jaccard")
stressplot(mds)
plot(otu_table(ps_pa))
plot(comm.dist)
ps.min <- subset_taxa(ps, taxa_sums(ps) > 1000)
ps_pa <- transform_sample_counts(ps.min, function(abund) 1*(abund>0))
# Calculate distance matrix
comm.dist <- vegdist(otu_table(ps_pa),method = "jaccard")
mds <- metaMDS(otu_table(ps_pa),distance = "jaccard")
stressplot(mds)
plot(comm.dist)
mod1 <- adonis(otu_table(ps) ~ sample_data(ps)$Species + sample_data(ps)$ReadDepth)
heatmap(t(as.matrix(otu_table(ps_pa))))
install.packages("remotes")
remotes::install_github("ying14/yingtools2")
remotes::install_github("ying14/yingtools2")
source("./R/yingtools2.R")
source("./R/yingtools2.R")
phy.collapse(ps, short_taxa_names=FALSE)
devtools::install_github("ying14/yingtools2")
source("./R/yingtools2_b.R")
phy.collapse(ps, short_taxa_names=FALSE)
library(data.table)
ps2 = phy.collapse(ps, short_taxa_names=FALSE)
ps2 = phy.collapse(ps, taxranks = c("Kingdom","Phylum","Class","Order","Family","Genus"),short_taxa_names=FALSE)
ps2 = phy.collapse(ps, taxranks = c("Kingdom","Phylum","Class","Order","Family","Genus","Species"),short_taxa_names=FALSE)
?tax_glom
tax_glom(ps,taxrank = rank_names(ps)[6])
ps2 = tax_glom(ps,taxrank = rank_names(ps)[6])
taxa_sums(ps)
plot(taxa_sums(ps))
summary(taxa_sums(ps))
ps.min <- subset_taxa(ps, taxa_sums(ps) > 10)
ps_pa <- transform_sample_counts(ps.min, function(abund) 1*(abund>0))
heatmap(t(as.matrix(otu_table(ps_pa))))
subset_samples(ps.min, sample_sums(ps.min) < 1)
sample_sums(ps.min)
comm.dist <- vegdist(otu_table(ps.min),method = "bray")
mds <- metaMDS(otu_table(ps.min),distance = "bray")
stressplot(mds)
plot(comm.dist)
ord1 = ordinate(ps.min, method = "DCA")
plot_ordination(ps.min,ord1,color="Species")
ps.min <- subset_taxa(ps2, taxa_sums(ps) > 10)
ord1 = ordinate(ps.min, method = "DCA")
plot_ordination(ps.min,ord1,color="Species")
taxa_sums(ps2)
ps.min <- subset_taxa(ps2, taxa_sums(ps2) > 10)
# Combine data with
# Packages
library(phyloseq)
library(tidyverse)
library(vegan)
install.packages("remotes")
remotes::install_github("ying14/yingtools2")
# Load data ####
pluteus <- readRDS("./output/phyloseq_object_16S_cleaned.RDS")
pacuta <- readRDS("./output/Pacuta_phyloseq_object.Rds")
# fix column names
pacuta@sam_data$Location <- as.character(pacuta@sam_data$Island.Collected.From)
pacuta@sam_data$Library.ID <-  as.character(pacuta@sam_data$SampleName)
# Parse components for merging
pacuta.otu <- otu_table(pacuta)
pacuta.tax <- tax_table(pacuta)
pacuta.sam <- as(sample_data(pacuta), "data.frame")
pluteus.otu <- otu_table(pluteus)
pluteus.tax <- tax_table(pluteus)
pluteus.sam <- as(sample_data(pluteus),"data.frame")
# Merge phyloseq objects ####
ps <- merge_phyloseq(pluteus.otu,sample_data(pluteus.sam),pluteus.tax,pacuta.otu,sample_data(pacuta.sam),pacuta.tax)
# Fix metadata
ps@sam_data$Species[ps@sam_data$Species=="1"] <- "P acuta"
ggplot(mapping=aes(x=1:nrow(otu_table(ps)),y=rowSums(otu_table(ps)))) + geom_point(aes(color=ps@sam_data$Species)) +
labs(x="Sample number",y="Read count",color="Species") + theme_bw()
# Add read count to sampledata
sample_data(ps)$ReadDepth <- rowSums(otu_table(ps))
# Collapse based on taxonomy at genus level ####
ps2 = tax_glom(ps,taxrank = rank_names(ps)[6])
# Look at taxa sums
summary(taxa_sums(ps2))
# Remove low-abundance OTUs ####
ps.min <- subset_taxa(ps2, taxa_sums(ps2) > 10)
summary(taxa_sums(ps2))
summary(taxa_sums(ps.min))
ps.min <- subset_taxa(ps2, taxa_sums(ps2) >= 10)
summary(taxa_sums(ps.min))
ord1 = ordinate(ps.min, method = "NMDS")
plot_ordination(ps.min,ord1,color="Species")
ord1 = ordinate(ps.min, method = "DCA")
plot_ordination(ps.min,ord1,color="Species")
mds <- metaMDS(otu_table(ps.min),distance = "jaccard")
mds <- metaMDS(otu_table(ps.min),distance = "jaccard",binary="TRUE")
?metamds
?metaMDS
mds <- metaMDS(otu_table(ps.min),distance = "jaccard",binary="TRUE",try = 20, trymax=100)
stressplot(mds)
mds1 <- nmds$points[,1]
mds1 <- nmds$points[,2]
sample_data(ps.min)
ord.df <- data.frame(MDS1=mds1,MDS2=mds2,Location=sample_data(ps.min)$Location,HostSpecies=sample_data(ps.min)$Species)
mds2 <- nmds$points[,2]
mds1 <- nmds$points[,1]
mds2 <- nmds$points[,2]
ord.df <- data.frame(MDS1=mds1,MDS2=mds2,Location=sample_data(ps.min)$Location,HostSpecies=sample_data(ps.min)$Species)
ggplot(ord.df,aes(x=MDS1,y=MDS2,color=HostSpecies)) + geom_point() + stat_ellipse()
plot(nmds$points[,1])
ordinate(ps.min,method = "NMDS",color="Species")
ord1=ordinate(ps.min,method = "NMDS",color="Species")
plot_ordination(ps.min,ord1,color="Species")
plot_ordination(ps.min,ord1,color="Species") + stat_ellipse()
ggsave("./output/Pacuta_vs_Plutea_NMDSPlot_draft.png")
ggplot(ord.df,aes(x=MDS1,y=MDS2,color=HostSpecies)) + geom_point() + stat_ellipse()
ord1=ordinate(ps.min,method = "NMDS",color="Species")
plot_ordination(ps.min,ord1,color="Species") + stat_ellipse()
mds <- metaMDS(otu_table(ps.min))
stressplot(mds)
plot(nmds$points[,1])
mds1 <- nmds$points[,1]
mds2 <- nmds$points[,2]
ord.df <- data.frame(MDS1=mds1,MDS2=mds2,Location=sample_data(ps.min)$Location,HostSpecies=sample_data(ps.min)$Species)
ggplot(ord.df,aes(x=MDS1,y=MDS2,color=HostSpecies)) + geom_point() + stat_ellipse()
ord1 = ordinate(ps.min, method = "NMDS")
plot_ordination(ps.min,ord1,color="Species")
# Calculate distance matrix
comm.dist <- vegdist(otu_table(ps.min),method = "bray")
plot(comm.dist)
# Convert to presence-absence ####
ps_pa <- transform_sample_counts(ps.min, function(abund) 1*(abund>0))
heatmap(t(as.matrix(otu_table(ps_pa))))
ps_pa@sam_data$Species
cols = plyr::mapvalues(from=ps_pa@sam_data$Species,to=c("Blue","Red"))
cols = plyr::mapvalues(from=as.factor(ps_pa@sam_data$Species),to=c("Blue","Red"))
cols = plyr::mapvalues(ps_pa@sam_data$Species,from=unique(ps_pa@sam_data$Species),to=c("Blue","Red"))
cols
heatmap(t(as.matrix(otu_table(ps_pa))),Rowv = NULL)
heatmap(t(as.matrix(otu_table(ps_pa))),Rowv = NA)
heatmap(t(as.matrix(otu_table(ps_pa))),Rowv = NA,ColSideColors = cols)
t(as.matrix(otu_table(ps_pa)))
pa = t(as.matrix(otu_table(ps_pa)))
pa = as(t(as.matrix(otu_table(ps_pa))),"data.frame")
pa = as(as.matrix(t(otu_table(ps_pa))),"data.frame")
pa = as.matrix(t(otu_table(ps_pa)))
pa = as(t(otu_table(ps_pa)),"matrix")
pa = as.data.frame(as(t(otu_table(ps_pa)),"matrix"))
heatmap(pa)
pa = as(t(otu_table(ps_pa)),"matrix")
heatmap(pa)
names(pa)
colnames(pa)
ps_pa@sam_data$Library.ID
ps_pa@sam_data$Species
cols = plyr::mapvalues(ps_pa@sam_data$Species,from=unique(ps_pa@sam_data$Species),to=c("Blue","Red"))
heatmap(pa,Rowv = NA,ColSideColors = cols)
heatmap(pa,Rowv = NA,ColSideColors = cols,Colv = NA)
?heatmap
heatmap(t(as.matrix(otu_table(ps_pa))),Rowv = NA,ColSideColors = cols,Colv = NA, labRow = NULL)
heatmap(t(as.matrix(otu_table(ps_pa))),Rowv = NA,ColSideColors = cols,Colv = NA, labRow = NA)
heatmap(t(as.matrix(otu_table(ps_pa))),Rowv = NA,ColSideColors = cols,Colv = NA, labRow = NA, col = gray.colors(50))
plot(pa)
heatmap(t(as.matrix(otu_table(ps_pa))),Rowv = NA,ColSideColors = cols,Colv = NA, labRow = NA, col = gray.colors(2))
pa[1,]
rownames(pa)
colnames(pa)
grep("ABB",x = colnames(pa))
Plutea.cols = grep("ABB",x = colnames(pa))
Pacuta.cols = grep("AOO",x = colnames(pa))
Plutea.matrix = pa[Plutea.cols,]
Pacuta.matrix = pa[Pacuta.cols,]
rowSums(Plutea.matrix)
rowSums(Plutea.matrix) > 0
rowSums(Plutea.matrix) > 0 & rowSums(Pacuta.matrix) > 0
rowSums(Plutea.matrix)
plot(rowSums(Plutea.matrix))
row.names(Plutea.matrix)
Plutea.matrix = pa[,Plutea.cols]
Pacuta.matrix = pa[,Pacuta.cols]
rowSums(Plutea.matrix) > 0 & rowSums(Pacuta.matrix) > 0
which(rowSums(Plutea.matrix) > 0 & rowSums(Pacuta.matrix) > 0)
rowSums(Plutea.matrix) > 0 & rowSums(Pacuta.matrix) > 0
which(rowSums(Plutea.matrix) > 0 & rowSums(Pacuta.matrix) > 0 == TRUE)
rowSums(Plutea.matrix) > 0 & rowSums(Pacuta.matrix) > 0
shared.genera = rowSums(Plutea.matrix) > 0 & rowSums(Pacuta.matrix) > 0
shared.genera[shared.genera == TRUE]
length(shared.genera[shared.genera == TRUE])
which(shared.genera == TRUE)
shared.genera = which(shared.genera == TRUE)
ps_pa@tax_table
ps_pa@tax_table[shared.genera,]
plot(ps_pa@tax_table[shared.genera,])
sink("./output/shared_Genera_Pactua-Plutea.txt")
ps_pa@tax_table[shared.genera,]
sink(NULL)
ps_pa@tax_table[shared.genera,"Genus"]
c(ps_pa@tax_table[shared.genera,"Genus"])
shared.genera.names = c(ps_pa@tax_table[shared.genera,"Genus"])
barchart(shared.genera.names)
ggplot(shared.genera.names) + geom_bar()
shared.family.names = c(ps_pa@tax_table[shared.genera,"Family"])
df.shared.taxa <- data.frame(Genus = shared.genera.names,Family = shared.family.names,Order=shared.order.names)
shared.order.names = c(ps_pa@tax_table[shared.genera,"Order"])
df.shared.taxa <- data.frame(Genus = shared.genera.names,Family = shared.family.names,Order=shared.order.names)
ggplot(df.shared.taxa) + geom_bar(aes(x=Genus))
ggplot(df.shared.taxa) + geom_bar(aes(x=Family))
ggplot(df.shared.taxa) + geom_bar(aes(x=Order))
ggplot(df.shared.taxa) + geom_bar(aes(x=reorder(Order,Order,order = function(x)-length(x))))
ggplot(df.shared.taxa) + geom_bar(aes(x=reorder(Order,Order,function(x)-length(x))))
shared.phylum.names = c(ps_pa@tax_table[shared.genera,"Phylum"])
df.shared.taxa <- data.frame(Genus = shared.genera.names,Family = shared.family.names,Order=shared.order.names,Phylum=shared.phylum.names)
ggplot(df.shared.taxa) + geom_bar(aes(x=reorder(Order,Order,function(x)-length(x)),fill=Phylum))
ggplot(df.shared.taxa) + geom_bar(aes(x=reorder(Order,Order,function(x)-length(x)),fill=Phylum)) +
theme(axis.text.x = element_text(angle=60))
theme(axis.text.x = element_text(angle=60,vjust = -1))
ggplot(df.shared.taxa) + geom_bar(aes(x=reorder(Order,Order,function(x)-length(x)),fill=Phylum)) +
theme(axis.text.x = element_text(angle=60,vjust = -1))
ggplot(df.shared.taxa) + geom_bar(aes(x=reorder(Order,Order,function(x)-length(x)),fill=Phylum)) +
theme(axis.text.x = element_text(angle=60,vjust = -.5))
ggplot(df.shared.taxa) + geom_bar(aes(x=reorder(Order,Order,function(x)-length(x)),fill=Phylum)) +
theme(axis.text.x = element_text(angle=60,vjust = 0))
ggplot(df.shared.taxa) + geom_bar(aes(x=reorder(Order,Order,function(x)-length(x)),fill=Phylum)) +
theme(axis.text.x = element_text(angle=60,vjust = 0.1))
ggplot(df.shared.taxa) + geom_bar(aes(x=reorder(Order,Order,function(x)-length(x)),fill=Phylum)) +
theme(axis.text.x = element_text(angle=60,vjust = 0.5))
ggplot(df.shared.taxa) + geom_bar(aes(x=reorder(Order,Order,function(x)-length(x)),fill=Phylum)) +
theme(axis.text.x = element_text(angle=90,vjust = 0.5))
ggplot(df.shared.taxa) + geom_bar(aes(x=reorder(Order,Order,function(x)-length(x)),fill=Phylum)) +
theme(axis.text.x = element_text(angle=90,vjust = 0.5)) + labs(x="Order")
ggplot(df.shared.taxa) + geom_bar(aes(x=reorder(Order,Order,function(x)-length(x)),fill=Phylum)) +
theme(axis.text.x = element_text(angle=90,vjust = 0.5),
axis.title = element_text(face="bold")) +
labs(x="Order",y="Shared Count")
ggplot(df.shared.taxa) + geom_bar(aes(x=reorder(Order,Order,function(x)-length(x)),fill=Phylum)) +
theme(axis.text.x = element_text(angle=90),
axis.title = element_text(face="bold")) +
labs(x="Order",y="Shared Count")
ggsave("./output/figs/Shared_Genera_Pacuta-Plutea_within_each-order.png",dpi=300)
